#!/usr/bin/env bash

# Script that runs coverage tests.

action() {
    local shell_is_zsh=$( [ -z "${ZSH_VERSION}" ] && echo "false" || echo "true" )
    local this_file="$( ${shell_is_zsh} && echo "${(%):-%x}" || echo "${BASH_SOURCE[0]}" )"
    local this_dir="$( cd "$( dirname "${this_file}" )" && pwd )"
    local cf_dir="$( dirname "${this_dir}" )"

    # helper to run a coverage test
    run_coverage() {
        local mod="$1"
        local sandbox="$2"

        if [ -z "${sandbox}" ]; then
            echo "testing ${mod} ..."
            (
                cd "${cf_dir}" && \
                pytest --cache-clear --verbosity=1 --cov=columnflow --cov-report "xml:coverage_${mod}.xml" "tests/${mod}.py"
            )
        else
            echo "testing ${mod} in sandbox ${sandbox} ..."
            (
                cd "${cf_dir}" && \
                bash -c "source sandboxes/${sandbox} \"\" yes && pytest --verbosity=1 --cache-clear --cov=columnflow --cov-report \"xml:coverage_${mod}.xml\" \"tests/${mod}.py\""
            )
        fi
    }

    # start tests and keep track of immediate and global return values
    local gret="0"
    local ret

    # test_util
    run_coverage test_util
    ret="$?"
    [ "${gret}" = "0" ] && gret="${ret}"

    # test_columnar_util
    echo
    run_coverage test_columnar_util "venv_columnar_dev.sh"
    ret="$?"
    [ "${gret}" = "0" ] && gret="${ret}"

    echo
    run_coverage test_config_util "venv_columnar_dev.sh"
    ret="$?"
    [ "${gret}" = "0" ] && gret="${ret}"

    echo
    run_coverage test_task_parameters
    ret="$?"
    [ "${gret}" = "0" ] && gret="${ret}"

    echo
    run_coverage test_plotting "venv_columnar_dev.sh"
    ret="$?"
    [ "${gret}" = "0" ] && gret="${ret}"

    return "${gret}"
}
action "$@"
